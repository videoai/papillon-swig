//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PDescriber : PPluginInstance {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PDescriber(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PDescriber_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PDescriber obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PDescriber() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PDescriber(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static PString C_PARAM_INT_VALID_POINTS {
    get {
      global::System.IntPtr cPtr = PapillonPINVOKE.PDescriber_C_PARAM_INT_VALID_POINTS_get();
      PString ret = (cPtr == global::System.IntPtr.Zero) ? null : new PString(cPtr, false);
      return ret;
    } 
  }

  public static PString C_PARAM_FLOAT_POINT_THRESHOLD {
    get {
      global::System.IntPtr cPtr = PapillonPINVOKE.PDescriber_C_PARAM_FLOAT_POINT_THRESHOLD_get();
      PString ret = (cPtr == global::System.IntPtr.Zero) ? null : new PString(cPtr, false);
      return ret;
    } 
  }

  public static PString C_PARAM_FLOAT_FACE_THRESHOLD {
    get {
      global::System.IntPtr cPtr = PapillonPINVOKE.PDescriber_C_PARAM_FLOAT_FACE_THRESHOLD_get();
      PString ret = (cPtr == global::System.IntPtr.Zero) ? null : new PString(cPtr, false);
      return ret;
    } 
  }

  public static PString C_PARAM_INT_MEAN_FACE {
    get {
      global::System.IntPtr cPtr = PapillonPINVOKE.PDescriber_C_PARAM_INT_MEAN_FACE_get();
      PString ret = (cPtr == global::System.IntPtr.Zero) ? null : new PString(cPtr, false);
      return ret;
    } 
  }

  public static PString C_PARAM_BOOL_DESCRIPTOR_THUMBNAIL {
    get {
      global::System.IntPtr cPtr = PapillonPINVOKE.PDescriber_C_PARAM_BOOL_DESCRIPTOR_THUMBNAIL_get();
      PString ret = (cPtr == global::System.IntPtr.Zero) ? null : new PString(cPtr, false);
      return ret;
    } 
  }

  public static PResult Create(string productName, PProperties parameters, PDescriber describer) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriber_Create__SWIG_0(productName, PProperties.getCPtr(parameters), PDescriber.getCPtr(describer)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult Create(SWIGTYPE_p_papillon__PPlugin plugin, PProperties parameters, PDescriber describer) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriber_Create__SWIG_1(SWIGTYPE_p_papillon__PPlugin.getCPtr(plugin), PProperties.getCPtr(parameters), PDescriber.getCPtr(describer)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PDescriber() : this(PapillonPINVOKE.new_PDescriber__SWIG_0(), true) {
  }

  public PDescriber(PDescriberInterface describerInterface) : this(PapillonPINVOKE.new_PDescriber__SWIG_1(PDescriberInterface.getCPtr(describerInterface)), true) {
  }

  public PDescriber(PDescriber other) : this(PapillonPINVOKE.new_PDescriber__SWIG_2(PDescriber.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PObjectType GetObjectType() {
    PObjectType ret = new PObjectType(PapillonPINVOKE.PDescriber_GetObjectType(swigCPtr), true);
    return ret;
  }

  public PGuid GetDescribeId() {
    PGuid ret = new PGuid(PapillonPINVOKE.PDescriber_GetDescribeId(swigCPtr), true);
    return ret;
  }

  public string GetModelName() {
    string ret = PapillonPINVOKE.PDescriber_GetModelName(swigCPtr);
    return ret;
  }

  public PResult Describe(PExampleSet exampleSet, PDescription outputDescription) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriber_Describe__SWIG_0(swigCPtr, PExampleSet.getCPtr(exampleSet), PDescription.getCPtr(outputDescription)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Describe(PDetection example, string name, PGuid identityId, PDescription description) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriber_Describe__SWIG_1(swigCPtr, PDetection.getCPtr(example), name, PGuid.getCPtr(identityId), PDescription.getCPtr(description)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Describe(PDetection detection, PDescription description) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriber_Describe__SWIG_2(swigCPtr, PDetection.getCPtr(detection), PDescription.getCPtr(description)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult DescribeBatch(PDetectionList batchDetections, SWIGTYPE_p_papillon__PDescriptionList batchDescription) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriber_DescribeBatch(swigCPtr, PDetectionList.getCPtr(batchDetections), SWIGTYPE_p_papillon__PDescriptionList.getCPtr(batchDescription)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
