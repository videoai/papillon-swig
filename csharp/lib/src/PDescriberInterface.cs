//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PDescriberInterface : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PDescriberInterface(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PDescriberInterface obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PDescriberInterface() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PDescriberInterface(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual PResult GetObjectType(PObjectType objectType) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriberInterface_GetObjectType(swigCPtr, PObjectType.getCPtr(objectType)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PResult GetDescribeId(PGuid describerId) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriberInterface_GetDescribeId(swigCPtr, PGuid.getCPtr(describerId)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PResult GetModelName(PString modelName) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriberInterface_GetModelName(swigCPtr, PString.getCPtr(modelName)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PResult Apply(PExampleSet exampleSet, PDescription outputDescription) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriberInterface_Apply(swigCPtr, PExampleSet.getCPtr(exampleSet), PDescription.getCPtr(outputDescription)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PResult ApplyBatch(PDetectionList detectionList, SWIGTYPE_p_papillon__PDescriptionList outputDescription) {
    PResult ret = new PResult(PapillonPINVOKE.PDescriberInterface_ApplyBatch(swigCPtr, PDetectionList.getCPtr(detectionList), SWIGTYPE_p_papillon__PDescriptionList.getCPtr(outputDescription)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual string ToString() {
    string ret = PapillonPINVOKE.PDescriberInterface_ToString(swigCPtr);
    return ret;
  }

}
