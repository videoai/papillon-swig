//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PDescription : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PDescription(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PDescription_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PDescription obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PDescription() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PDescription(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PDescription() : this(PapillonPINVOKE.new_PDescription__SWIG_0(), true) {
  }

  public PDescription(string name, PObjectType objectType, PGuid identityId, PProperties properties) : this(PapillonPINVOKE.new_PDescription__SWIG_1(name, PObjectType.getCPtr(objectType), PGuid.getCPtr(identityId), PProperties.getCPtr(properties)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDescription(string name, PObjectType objectType, PGuid identityId) : this(PapillonPINVOKE.new_PDescription__SWIG_2(name, PObjectType.getCPtr(objectType), PGuid.getCPtr(identityId)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDescription(PDescription other) : this(PapillonPINVOKE.new_PDescription__SWIG_3(PDescription.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsEmpty() {
    bool ret = PapillonPINVOKE.PDescription_IsEmpty(swigCPtr);
    return ret;
  }

  public void Reset() {
    PapillonPINVOKE.PDescription_Reset(swigCPtr);
  }

  public void SetName(string name) {
    PapillonPINVOKE.PDescription_SetName(swigCPtr, name);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetName() {
    string ret = PapillonPINVOKE.PDescription_GetName(swigCPtr);
    return ret;
  }

  public void SetIdentityId(PGuid objectId) {
    PapillonPINVOKE.PDescription_SetIdentityId(swigCPtr, PGuid.getCPtr(objectId));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PGuid GetIdentityId() {
    PGuid ret = new PGuid(PapillonPINVOKE.PDescription_GetIdentityId(swigCPtr), false);
    return ret;
  }

  public void SetObjectType(PObjectType objectType) {
    PapillonPINVOKE.PDescription_SetObjectType(swigCPtr, PObjectType.getCPtr(objectType));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PObjectType GetObjectType() {
    PObjectType ret = new PObjectType(PapillonPINVOKE.PDescription_GetObjectType(swigCPtr), true);
    return ret;
  }

  public void SetThumbnail(PImage thumbnail) {
    PapillonPINVOKE.PDescription_SetThumbnail(swigCPtr, PImage.getCPtr(thumbnail));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PImage GetThumbnail() {
    PImage ret = new PImage(PapillonPINVOKE.PDescription_GetThumbnail(swigCPtr), true);
    return ret;
  }

  public void SetVersion(PVersion version) {
    PapillonPINVOKE.PDescription_SetVersion(swigCPtr, PVersion.getCPtr(version));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PVersion GetVersion() {
    PVersion ret = new PVersion(PapillonPINVOKE.PDescription_GetVersion(swigCPtr), true);
    return ret;
  }

  public void AddDescriptor(PDescriptor descriptor) {
    PapillonPINVOKE.PDescription_AddDescriptor(swigCPtr, PDescriptor.getCPtr(descriptor));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PResult RemoveDescriptor(PGuid descriptorId) {
    PResult ret = new PResult(PapillonPINVOKE.PDescription_RemoveDescriptor(swigCPtr, PGuid.getCPtr(descriptorId)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult AddDescription(PDescription description) {
    PResult ret = new PResult(PapillonPINVOKE.PDescription_AddDescription(swigCPtr, PDescription.getCPtr(description)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PList GetDescriptors(PGuid describeId) {
    PList ret = new PList(PapillonPINVOKE.PDescription_GetDescriptors__SWIG_0(swigCPtr, PGuid.getCPtr(describeId)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PList GetDescriptors(PObjectType objectType) {
    PList ret = new PList(PapillonPINVOKE.PDescription_GetDescriptors__SWIG_1(swigCPtr, PObjectType.getCPtr(objectType)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PList GetDescriptors() {
    PList ret = new PList(PapillonPINVOKE.PDescription_GetDescriptors__SWIG_2(swigCPtr), false);
    return ret;
  }

  public PProperties GetProperties() {
    PProperties ret = new PProperties(PapillonPINVOKE.PDescription_GetProperties(swigCPtr), true);
    return ret;
  }

  public PList GetThumbnails() {
    PList ret = new PList(PapillonPINVOKE.PDescription_GetThumbnails(swigCPtr), true);
    return ret;
  }

  public int RecomputeDescriptors(PGuid describeId, PDetector detector, PDescriber describer) {
    int ret = PapillonPINVOKE.PDescription_RecomputeDescriptors(swigCPtr, PGuid.getCPtr(describeId), PDetector.getCPtr(detector), PDescriber.getCPtr(describer));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
