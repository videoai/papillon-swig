//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PDetectionList : PList {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PDetectionList(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PDetectionList_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PDetectionList obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PDetectionList() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PDetectionList(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PDetectionList(int size) : this(PapillonPINVOKE.new_PDetectionList__SWIG_0(size), true) {
  }

  public PDetectionList() : this(PapillonPINVOKE.new_PDetectionList__SWIG_1(), true) {
  }

  public PDetectionList(PDetectionList other) : this(PapillonPINVOKE.new_PDetectionList__SWIG_2(PDetectionList.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDetection Get(int n) {
    PDetection ret = new PDetection(PapillonPINVOKE.PDetectionList_Get(swigCPtr, n), true);
    return ret;
  }

  public PDetection GetLargest() {
    PDetection ret = new PDetection(PapillonPINVOKE.PDetectionList_GetLargest(swigCPtr), true);
    return ret;
  }

  public void RemoveSmallest(int minWidthBBox, int minHeightBBox, string objectType) {
    PapillonPINVOKE.PDetectionList_RemoveSmallest(swigCPtr, minWidthBBox, minHeightBBox, objectType);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PRectanglef GetBoundingBox() {
    PRectanglef ret = new PRectanglef(PapillonPINVOKE.PDetectionList_GetBoundingBox(swigCPtr), true);
    return ret;
  }

  public void Keep(PSizei minBoundingBox, PSizei maxBoundingBox, string objectType, int maxNumber) {
    PapillonPINVOKE.PDetectionList_Keep__SWIG_0(swigCPtr, PSizei.getCPtr(minBoundingBox), PSizei.getCPtr(maxBoundingBox), objectType, maxNumber);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Keep(PSizei minBoundingBox, PSizei maxBoundingBox, string objectType) {
    PapillonPINVOKE.PDetectionList_Keep__SWIG_1(swigCPtr, PSizei.getCPtr(minBoundingBox), PSizei.getCPtr(maxBoundingBox), objectType);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Translate(float x, float y) {
    PapillonPINVOKE.PDetectionList_Translate(swigCPtr, x, y);
  }

}
