//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PEnrollment : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PEnrollment(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PEnrollment_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PEnrollment obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PEnrollment() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PEnrollment(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PEnrollment() : this(PapillonPINVOKE.new_PEnrollment__SWIG_0(), true) {
  }

  public PEnrollment(PEnrollment other) : this(PapillonPINVOKE.new_PEnrollment__SWIG_1(PEnrollment.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsConfigured() {
    bool ret = PapillonPINVOKE.PEnrollment_IsConfigured(swigCPtr);
    return ret;
  }

  public void Configure(PDetector detector, PDescriber describer) {
    PapillonPINVOKE.PEnrollment_Configure(swigCPtr, PDetector.getCPtr(detector), PDescriber.getCPtr(describer));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void EnableDisplay(bool isEnabled) {
    PapillonPINVOKE.PEnrollment_EnableDisplay(swigCPtr, isEnabled);
  }

  public PResult AutoConfigureForFaceRecognition(int minDetectionSize, bool extractThumbnails, string describerModelName) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_AutoConfigureForFaceRecognition__SWIG_0(swigCPtr, minDetectionSize, extractThumbnails, describerModelName), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult AutoConfigureForFaceRecognition(int minDetectionSize, bool extractThumbnails) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_AutoConfigureForFaceRecognition__SWIG_1(swigCPtr, minDetectionSize, extractThumbnails), true);
    return ret;
  }

  public PResult AutoConfigureForFaceRecognition(int minDetectionSize) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_AutoConfigureForFaceRecognition__SWIG_2(swigCPtr, minDetectionSize), true);
    return ret;
  }

  public PResult AutoConfigureForFaceRecognition() {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_AutoConfigureForFaceRecognition__SWIG_3(swigCPtr), true);
    return ret;
  }

  public PDetector GetDetector() {
    PDetector ret = new PDetector(PapillonPINVOKE.PEnrollment_GetDetector(swigCPtr), true);
    return ret;
  }

  public PDescriber GetDescriber() {
    PDescriber ret = new PDescriber(PapillonPINVOKE.PEnrollment_GetDescriber(swigCPtr), true);
    return ret;
  }

  public PDescription GetLastDescription() {
    PDescription ret = new PDescription(PapillonPINVOKE.PEnrollment_GetLastDescription(swigCPtr), true);
    return ret;
  }

  public PResult EnrollFromImage(PImage image, PDescription description, string subjectName, PGuid subjectId) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_0(swigCPtr, PImage.getCPtr(image), PDescription.getCPtr(description), subjectName, PGuid.getCPtr(subjectId)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImage(PImage image, PDescription description, string subjectName) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_1(swigCPtr, PImage.getCPtr(image), PDescription.getCPtr(description), subjectName), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImage(PImage image, PDescription description) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_2(swigCPtr, PImage.getCPtr(image), PDescription.getCPtr(description)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImage(string imageFilename, PDescription description, string subjectName, PGuid subjectId) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_3(swigCPtr, imageFilename, PDescription.getCPtr(description), subjectName, PGuid.getCPtr(subjectId)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImage(string imageFilename, PDescription description, string subjectName) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_4(swigCPtr, imageFilename, PDescription.getCPtr(description), subjectName), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImage(string imageFilename, PDescription description) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_5(swigCPtr, imageFilename, PDescription.getCPtr(description)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImage(PImage image, PGuid subjectId, string subjectName, PWatchlist watchlist) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_6(swigCPtr, PImage.getCPtr(image), PGuid.getCPtr(subjectId), subjectName, PWatchlist.getCPtr(watchlist)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImage(string imageFilename, PGuid subjectId, string subjectName, PWatchlist watchlist) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImage__SWIG_7(swigCPtr, imageFilename, PGuid.getCPtr(subjectId), subjectName, PWatchlist.getCPtr(watchlist)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImages(string path, PGuid subjectId, string subjectName, PWatchlist watchlist) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImages__SWIG_0(swigCPtr, path, PGuid.getCPtr(subjectId), subjectName, PWatchlist.getCPtr(watchlist)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImages(string path, PDescription description, string subjectName, PGuid subjectId) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImages__SWIG_1(swigCPtr, path, PDescription.getCPtr(description), subjectName, PGuid.getCPtr(subjectId)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImages(string path, PDescription description, string subjectName) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImages__SWIG_2(swigCPtr, path, PDescription.getCPtr(description), subjectName), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromImages(string path, PDescription description) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromImages__SWIG_3(swigCPtr, path, PDescription.getCPtr(description)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromVideoStream(PInputVideoStream ivs, int maxFrames, int maxExamples, PGuid subjectId, string subjectName, PWatchlist watchlist) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromVideoStream__SWIG_0(swigCPtr, PInputVideoStream.getCPtr(ivs), maxFrames, maxExamples, PGuid.getCPtr(subjectId), subjectName, PWatchlist.getCPtr(watchlist)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromVideoStream(PInputVideoStream ivs, PDescription description, int maxFrames, int maxExamples, PGuid subjectId, string subjectName) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromVideoStream__SWIG_1(swigCPtr, PInputVideoStream.getCPtr(ivs), PDescription.getCPtr(description), maxFrames, maxExamples, PGuid.getCPtr(subjectId), subjectName), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromVideo(string videoFilename, PDescription description, int maxFrames, int maxExamples, string subjectName, PGuid subjectId) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromVideo__SWIG_0(swigCPtr, videoFilename, PDescription.getCPtr(description), maxFrames, maxExamples, subjectName, PGuid.getCPtr(subjectId)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromVideo(string videoFilename, PDescription description, int maxFrames, int maxExamples, string subjectName) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromVideo__SWIG_1(swigCPtr, videoFilename, PDescription.getCPtr(description), maxFrames, maxExamples, subjectName), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromVideo(string videoFilename, PDescription description, int maxFrames, int maxExamples) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromVideo__SWIG_2(swigCPtr, videoFilename, PDescription.getCPtr(description), maxFrames, maxExamples), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromVideo(string videoFilename, PDescription description, int maxFrames) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromVideo__SWIG_3(swigCPtr, videoFilename, PDescription.getCPtr(description), maxFrames), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromVideo(string videoFilename, PDescription description) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromVideo__SWIG_4(swigCPtr, videoFilename, PDescription.getCPtr(description)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromCSV(string csvInputFilename, int videoMaxFrames, int videoMaxExamples, string csvOutputFilename, PWatchlist watchlist, SWIGTYPE_p_f_r_q_const__papillon__PString__void callback) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromCSV__SWIG_0(swigCPtr, csvInputFilename, videoMaxFrames, videoMaxExamples, csvOutputFilename, PWatchlist.getCPtr(watchlist), SWIGTYPE_p_f_r_q_const__papillon__PString__void.getCPtr(callback)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult EnrollFromCSV(string csvInputFilename, int videoMaxFrames, int videoMaxExamples, string csvOutputFilename, PWatchlist watchlist) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_EnrollFromCSV__SWIG_1(swigCPtr, csvInputFilename, videoMaxFrames, videoMaxExamples, csvOutputFilename, PWatchlist.getCPtr(watchlist)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult CreateWatchlist(string configurationFile, PWatchlist watchlist, int maxFrames, int maxExamples) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_CreateWatchlist__SWIG_0(swigCPtr, configurationFile, PWatchlist.getCPtr(watchlist), maxFrames, maxExamples), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult CreateWatchlist(string configurationFile, PWatchlist watchlist, int maxFrames) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_CreateWatchlist__SWIG_1(swigCPtr, configurationFile, PWatchlist.getCPtr(watchlist), maxFrames), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult CreateWatchlist(string configurationFile, PWatchlist watchlist) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_CreateWatchlist__SWIG_2(swigCPtr, configurationFile, PWatchlist.getCPtr(watchlist)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult CreateWatchlistFromFolder(string path, PWatchlist watchlist, bool thumbnail, int maxFrames, int maxExamples) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_CreateWatchlistFromFolder__SWIG_0(swigCPtr, path, PWatchlist.getCPtr(watchlist), thumbnail, maxFrames, maxExamples), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult CreateWatchlistFromFolder(string path, PWatchlist watchlist, bool thumbnail, int maxFrames) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_CreateWatchlistFromFolder__SWIG_1(swigCPtr, path, PWatchlist.getCPtr(watchlist), thumbnail, maxFrames), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult CreateWatchlistFromFolder(string path, PWatchlist watchlist, bool thumbnail) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_CreateWatchlistFromFolder__SWIG_2(swigCPtr, path, PWatchlist.getCPtr(watchlist), thumbnail), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult CreateWatchlistFromFolder(string path, PWatchlist watchlist) {
    PResult ret = new PResult(PapillonPINVOKE.PEnrollment_CreateWatchlistFromFolder__SWIG_3(swigCPtr, path, PWatchlist.getCPtr(watchlist)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
