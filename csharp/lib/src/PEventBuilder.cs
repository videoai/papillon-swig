//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PEventBuilder : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PEventBuilder(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PEventBuilder obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PEventBuilder() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PEventBuilder(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PEventBuilder(string type, string annotation, PGuid sourceId) : this(PapillonPINVOKE.new_PEventBuilder__SWIG_0(type, annotation, PGuid.getCPtr(sourceId)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PEventBuilder(string type, string annotation) : this(PapillonPINVOKE.new_PEventBuilder__SWIG_1(type, annotation), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PEventBuilder(string type) : this(PapillonPINVOKE.new_PEventBuilder__SWIG_2(type), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PEventBuilder(PEventBuilder other) : this(PapillonPINVOKE.new_PEventBuilder__SWIG_3(PEventBuilder.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PEventBuilder Type(string eventType) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_Type(swigCPtr, eventType), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder Annotation(string eventAnnotation) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_Annotation(swigCPtr, eventAnnotation), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder SourceId(PGuid eventSourceId) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_SourceId(swigCPtr, PGuid.getCPtr(eventSourceId)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder Payload(PProperties payload) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_Payload__SWIG_0(swigCPtr, PProperties.getCPtr(payload)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder Payload(string key, PObject value) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_Payload__SWIG_1(swigCPtr, key, PObject.getCPtr(value)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder Certainty(double certainty) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_Certainty(swigCPtr, certainty), false);
    return ret;
  }

  public PEventBuilder OccurenceTime(PDateTime occurenceTime) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_OccurenceTime(swigCPtr, PDateTime.getCPtr(occurenceTime)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder TimeGranularity(PEvent.EEventTimeGranularity timeGranularity) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_TimeGranularity(swigCPtr, (int)timeGranularity), false);
    return ret;
  }

  public PEventBuilder DetectionTime(PDateTime detectionTime) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_DetectionTime(swigCPtr, PDateTime.getCPtr(detectionTime)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder Id(PGuid eventId) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_Id(swigCPtr, PGuid.getCPtr(eventId)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PEventBuilder Composed(bool isComposed) {
    PEventBuilder ret = new PEventBuilder(PapillonPINVOKE.PEventBuilder_Composed(swigCPtr, isComposed), false);
    return ret;
  }

  public PEvent Done() {
    PEvent ret = new PEvent(PapillonPINVOKE.PEventBuilder_Done(swigCPtr), true);
    return ret;
  }

}
