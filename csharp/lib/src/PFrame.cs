//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PFrame : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PFrame(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PFrame_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PFrame obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PFrame() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PFrame(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PFrame() : this(PapillonPINVOKE.new_PFrame__SWIG_0(), true) {
  }

  public PFrame(PImage image, PGuid frameId, PGuid sourceId) : this(PapillonPINVOKE.new_PFrame__SWIG_1(PImage.getCPtr(image), PGuid.getCPtr(frameId), PGuid.getCPtr(sourceId)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PFrame(PImage image, PGuid frameId) : this(PapillonPINVOKE.new_PFrame__SWIG_2(PImage.getCPtr(image), PGuid.getCPtr(frameId)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PFrame(PImage image) : this(PapillonPINVOKE.new_PFrame__SWIG_3(PImage.getCPtr(image)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PFrame(PFrame other) : this(PapillonPINVOKE.new_PFrame__SWIG_4(PFrame.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PGuid GetFrameId() {
    PGuid ret = new PGuid(PapillonPINVOKE.PFrame_GetFrameId(swigCPtr), false);
    return ret;
  }

  public PGuid GetSourceId() {
    PGuid ret = new PGuid(PapillonPINVOKE.PFrame_GetSourceId(swigCPtr), false);
    return ret;
  }

  public void SetFrameId(PGuid guid) {
    PapillonPINVOKE.PFrame_SetFrameId(swigCPtr, PGuid.getCPtr(guid));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetSourceId(PGuid guid) {
    PapillonPINVOKE.PFrame_SetSourceId(swigCPtr, PGuid.getCPtr(guid));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PSizei GetSize() {
    PSizei ret = new PSizei(PapillonPINVOKE.PFrame_GetSize(swigCPtr), true);
    return ret;
  }

  public int GetWidth() {
    int ret = PapillonPINVOKE.PFrame_GetWidth(swigCPtr);
    return ret;
  }

  public int GetHeight() {
    int ret = PapillonPINVOKE.PFrame_GetHeight(swigCPtr);
    return ret;
  }

  public PRectanglei GetRectangle() {
    PRectanglei ret = new PRectanglei(PapillonPINVOKE.PFrame_GetRectangle(swigCPtr), true);
    return ret;
  }

  public void SetNewImage(PImage image, PGuid frameId, PGuid sourceId) {
    PapillonPINVOKE.PFrame_SetNewImage__SWIG_0(swigCPtr, PImage.getCPtr(image), PGuid.getCPtr(frameId), PGuid.getCPtr(sourceId));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetNewImage(PImage image, PGuid frameId) {
    PapillonPINVOKE.PFrame_SetNewImage__SWIG_1(swigCPtr, PImage.getCPtr(image), PGuid.getCPtr(frameId));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetNewImage(PImage image) {
    PapillonPINVOKE.PFrame_SetNewImage__SWIG_2(swigCPtr, PImage.getCPtr(image));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetImage(PImage image) {
    PapillonPINVOKE.PFrame_SetImage(swigCPtr, PImage.getCPtr(image));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetFrameNumber(int frameNumber) {
    PapillonPINVOKE.PFrame_SetFrameNumber(swigCPtr, frameNumber);
  }

  public void SetSourceFrameNumber(int frameNumber) {
    PapillonPINVOKE.PFrame_SetSourceFrameNumber(swigCPtr, frameNumber);
  }

  public void SetTimestampUTC(PDateTime timestamp) {
    PapillonPINVOKE.PFrame_SetTimestampUTC(swigCPtr, PDateTime.getCPtr(timestamp));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTimestampToCurrentUTC() {
    PapillonPINVOKE.PFrame_SetTimestampToCurrentUTC(swigCPtr);
  }

  public void Resize(PSizei newSize, PImage.EAspectRatioMode aspectRatioMode, PImage.EInterpolation interpolation) {
    PapillonPINVOKE.PFrame_Resize__SWIG_0(swigCPtr, PSizei.getCPtr(newSize), (int)aspectRatioMode, (int)interpolation);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Resize(PSizei newSize, PImage.EAspectRatioMode aspectRatioMode) {
    PapillonPINVOKE.PFrame_Resize__SWIG_1(swigCPtr, PSizei.getCPtr(newSize), (int)aspectRatioMode);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Resize(PSizei newSize) {
    PapillonPINVOKE.PFrame_Resize__SWIG_2(swigCPtr, PSizei.getCPtr(newSize));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Resize(float scaleFactor, PImage.EInterpolation interpolation) {
    PapillonPINVOKE.PFrame_Resize__SWIG_3(swigCPtr, scaleFactor, (int)interpolation);
  }

  public void Resize(float scaleFactor) {
    PapillonPINVOKE.PFrame_Resize__SWIG_4(swigCPtr, scaleFactor);
  }

  public void ConvertTo(PImage.EPixelFormat format) {
    PapillonPINVOKE.PFrame_ConvertTo(swigCPtr, (int)format);
  }

  public PResult Crop(PRectanglei r) {
    PResult ret = new PResult(PapillonPINVOKE.PFrame_Crop(swigCPtr, PRectanglei.getCPtr(r)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PImage GetImageShared() {
    PImage ret = new PImage(PapillonPINVOKE.PFrame_GetImageShared__SWIG_0(swigCPtr), true);
    return ret;
  }

  public PImage GetImage() {
    PImage ret = new PImage(PapillonPINVOKE.PFrame_GetImage(swigCPtr), false);
    return ret;
  }

  public PImage GetImageShared(PImage.EPixelFormat pixelFormat) {
    PImage ret = new PImage(PapillonPINVOKE.PFrame_GetImageShared__SWIG_1(swigCPtr, (int)pixelFormat), true);
    return ret;
  }

  public int GetFrameNumber() {
    int ret = PapillonPINVOKE.PFrame_GetFrameNumber(swigCPtr);
    return ret;
  }

  public int GetSourceFrameNumber() {
    int ret = PapillonPINVOKE.PFrame_GetSourceFrameNumber(swigCPtr);
    return ret;
  }

  public PDateTime GetTimestampUTC() {
    PDateTime ret = new PDateTime(PapillonPINVOKE.PFrame_GetTimestampUTC(swigCPtr), true);
    return ret;
  }

  public PProperties GetPropertiesShared() {
    PProperties ret = new PProperties(PapillonPINVOKE.PFrame_GetPropertiesShared(swigCPtr), true);
    return ret;
  }

  public PProperties GetProperties() {
    PProperties ret = new PProperties(PapillonPINVOKE.PFrame_GetProperties(swigCPtr), false);
    return ret;
  }

  public void SetProperties(PProperties properties) {
    PapillonPINVOKE.PFrame_SetProperties(swigCPtr, PProperties.getCPtr(properties));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public void InvalidateCache() {
    PapillonPINVOKE.PFrame_InvalidateCache(swigCPtr);
  }

  public void Reset() {
    PapillonPINVOKE.PFrame_Reset(swigCPtr);
  }

  public PResult Display(string title, int waitTimeMs) {
    PResult ret = new PResult(PapillonPINVOKE.PFrame_Display__SWIG_0(swigCPtr, title, waitTimeMs), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Display(string title) {
    PResult ret = new PResult(PapillonPINVOKE.PFrame_Display__SWIG_1(swigCPtr, title), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult DisplayScaled(string title, int width, int height, int waitTimeMs) {
    PResult ret = new PResult(PapillonPINVOKE.PFrame_DisplayScaled__SWIG_0(swigCPtr, title, width, height, waitTimeMs), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult DisplayScaled(string title, int width, int height) {
    PResult ret = new PResult(PapillonPINVOKE.PFrame_DisplayScaled__SWIG_1(swigCPtr, title, width, height), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult DisplayScaled(string title, int waitTimeMs) {
    PResult ret = new PResult(PapillonPINVOKE.PFrame_DisplayScaled__SWIG_2(swigCPtr, title, waitTimeMs), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult DisplayScaled(string title) {
    PResult ret = new PResult(PapillonPINVOKE.PFrame_DisplayScaled__SWIG_3(swigCPtr, title), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
