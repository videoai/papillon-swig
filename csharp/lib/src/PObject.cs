//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PObject : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PObject(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PObject obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PObject() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PObject(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PObject() : this(PapillonPINVOKE.new_PObject__SWIG_0(), true) {
  }

  public PObject(PObject obj) : this(PapillonPINVOKE.new_PObject__SWIG_1(PObject.getCPtr(obj)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsNullReference() {
    bool ret = PapillonPINVOKE.PObject_IsNullReference(swigCPtr);
    return ret;
  }

  public ushort GetClassId() {
    ushort ret = PapillonPINVOKE.PObject_GetClassId(swigCPtr);
    return ret;
  }

  public PResult CastTo(PObject obj) {
    PResult ret = new PResult(PapillonPINVOKE.PObject_CastTo__SWIG_0(swigCPtr, PObject.getCPtr(obj)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint GetHashCode() {
    uint ret = PapillonPINVOKE.PObject_GetHashCode(swigCPtr);
    return ret;
  }

  public bool IsSerialisable() {
    bool ret = PapillonPINVOKE.PObject_IsSerialisable(swigCPtr);
    return ret;
  }

  public PResult Write(PByteStream os, ESerialisationFormat format) {
    PResult ret = new PResult(PapillonPINVOKE.PObject_Write__SWIG_0(swigCPtr, PByteStream.getCPtr(os), (int)format), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Write(PByteStream os) {
    PResult ret = new PResult(PapillonPINVOKE.PObject_Write__SWIG_1(swigCPtr, PByteStream.getCPtr(os)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Read(PByteStream arg0, ESerialisationFormat format) {
    PResult ret = new PResult(PapillonPINVOKE.PObject_Read__SWIG_0(swigCPtr, PByteStream.getCPtr(arg0), (int)format), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Read(PByteStream arg0) {
    PResult ret = new PResult(PapillonPINVOKE.PObject_Read__SWIG_1(swigCPtr, PByteStream.getCPtr(arg0)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PObject ReadObject(PByteStream arg0, PResult result) {
    PObject ret = new PObject(PapillonPINVOKE.PObject_ReadObject(swigCPtr, PByteStream.getCPtr(arg0), PResult.getCPtr(result)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string ToString() {
    string ret = PapillonPINVOKE.PObject_ToString(swigCPtr);
    return ret;
  }

  public PByteArray ToByteArray() {
    PByteArray ret = new PByteArray(PapillonPINVOKE.PObject_ToByteArray(swigCPtr), true);
    return ret;
  }

  public string ToBase64() {
    string ret = PapillonPINVOKE.PObject_ToBase64(swigCPtr);
    return ret;
  }

  public PResult FromBase64(string base64representation) {
    PResult ret = new PResult(PapillonPINVOKE.PObject_FromBase64(swigCPtr, base64representation), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string DebugInternalPointer() {
    string ret = PapillonPINVOKE.PObject_DebugInternalPointer(swigCPtr);
    return ret;
  }

  public uint DebugCounter() {
    uint ret = PapillonPINVOKE.PObject_DebugCounter(swigCPtr);
    return ret;
  }

  public void Swap(PObject other) {
    PapillonPINVOKE.PObject_Swap(swigCPtr, PObject.getCPtr(other));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

}
