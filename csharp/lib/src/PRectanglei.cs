//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PRectanglei : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PRectanglei(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PRectanglei_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PRectanglei obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PRectanglei() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PRectanglei(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PRectanglei(int x, int y, int w, int h) : this(PapillonPINVOKE.new_PRectanglei__SWIG_0(x, y, w, h), true) {
  }

  public PRectanglei(int x, int y, int w) : this(PapillonPINVOKE.new_PRectanglei__SWIG_1(x, y, w), true) {
  }

  public PRectanglei(int x, int y) : this(PapillonPINVOKE.new_PRectanglei__SWIG_2(x, y), true) {
  }

  public PRectanglei(int x) : this(PapillonPINVOKE.new_PRectanglei__SWIG_3(x), true) {
  }

  public PRectanglei() : this(PapillonPINVOKE.new_PRectanglei__SWIG_4(), true) {
  }

  public PRectanglei(PRectanglei other) : this(PapillonPINVOKE.new_PRectanglei__SWIG_5(PRectanglei.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsValid() {
    bool ret = PapillonPINVOKE.PRectanglei_IsValid(swigCPtr);
    return ret;
  }

  public int GetX() {
    int ret = PapillonPINVOKE.PRectanglei_GetX(swigCPtr);
    return ret;
  }

  public int GetY() {
    int ret = PapillonPINVOKE.PRectanglei_GetY(swigCPtr);
    return ret;
  }

  public int GetWidth() {
    int ret = PapillonPINVOKE.PRectanglei_GetWidth(swigCPtr);
    return ret;
  }

  public int GetHeight() {
    int ret = PapillonPINVOKE.PRectanglei_GetHeight(swigCPtr);
    return ret;
  }

  public PPoint2Di GetOrigin() {
    PPoint2Di ret = new PPoint2Di(PapillonPINVOKE.PRectanglei_GetOrigin(swigCPtr), true);
    return ret;
  }

  public PPoint2Df GetOriginf() {
    PPoint2Df ret = new PPoint2Df(PapillonPINVOKE.PRectanglei_GetOriginf(swigCPtr), true);
    return ret;
  }

  public PSizei GetSize() {
    PSizei ret = new PSizei(PapillonPINVOKE.PRectanglei_GetSize(swigCPtr), true);
    return ret;
  }

  public PPoint2Df GetCentre() {
    PPoint2Df ret = new PPoint2Df(PapillonPINVOKE.PRectanglei_GetCentre(swigCPtr), true);
    return ret;
  }

  public int GetArea() {
    int ret = PapillonPINVOKE.PRectanglei_GetArea(swigCPtr);
    return ret;
  }

  public PRectanglei ClipBy(PRectanglei other) {
    PRectanglei ret = new PRectanglei(PapillonPINVOKE.PRectanglei_ClipBy(swigCPtr, PRectanglei.getCPtr(other)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PRectanglei Expand(int expandBy) {
    PRectanglei ret = new PRectanglei(PapillonPINVOKE.PRectanglei_Expand(swigCPtr, expandBy), true);
    return ret;
  }

  public float GetOverlapArea(PRectanglei rectangle) {
    float ret = PapillonPINVOKE.PRectanglei_GetOverlapArea(swigCPtr, PRectanglei.getCPtr(rectangle));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float GetDiceCoefficient(PRectanglei rectangle) {
    float ret = PapillonPINVOKE.PRectanglei_GetDiceCoefficient(swigCPtr, PRectanglei.getCPtr(rectangle));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Contains(PPoint2Di p) {
    bool ret = PapillonPINVOKE.PRectanglei_Contains(swigCPtr, PPoint2Di.getCPtr(p));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PRectanglef ToPRectanglef() {
    PRectanglef ret = new PRectanglef(PapillonPINVOKE.PRectanglei_ToPRectanglef(swigCPtr), true);
    return ret;
  }

  public static PResult FromString(string s, PRectanglei r) {
    PResult ret = new PResult(PapillonPINVOKE.PRectanglei_FromString(s, PRectanglei.getCPtr(r)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
