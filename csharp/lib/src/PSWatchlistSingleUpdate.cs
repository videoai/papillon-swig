//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PSWatchlistSingleUpdate : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PSWatchlistSingleUpdate(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PSWatchlistSingleUpdate obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PSWatchlistSingleUpdate() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PSWatchlistSingleUpdate(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PSWatchlistSingleUpdate() : this(PapillonPINVOKE.new_PSWatchlistSingleUpdate__SWIG_0(), true) {
  }

  public PSWatchlistSingleUpdate(PSWatchlistSingleUpdate.EChangeType action, PGuid objectId, PDescription description) : this(PapillonPINVOKE.new_PSWatchlistSingleUpdate__SWIG_1((int)action, PGuid.getCPtr(objectId), PDescription.getCPtr(description)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PSWatchlistSingleUpdate.EChangeType m_action {
    set {
      PapillonPINVOKE.PSWatchlistSingleUpdate_m_action_set(swigCPtr, (int)value);
    } 
    get {
      PSWatchlistSingleUpdate.EChangeType ret = (PSWatchlistSingleUpdate.EChangeType)PapillonPINVOKE.PSWatchlistSingleUpdate_m_action_get(swigCPtr);
      return ret;
    } 
  }

  public PGuid m_objectId {
    set {
      PapillonPINVOKE.PSWatchlistSingleUpdate_m_objectId_set(swigCPtr, PGuid.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = PapillonPINVOKE.PSWatchlistSingleUpdate_m_objectId_get(swigCPtr);
      PGuid ret = (cPtr == global::System.IntPtr.Zero) ? null : new PGuid(cPtr, false);
      return ret;
    } 
  }

  public PDescription m_description {
    set {
      PapillonPINVOKE.PSWatchlistSingleUpdate_m_description_set(swigCPtr, PDescription.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = PapillonPINVOKE.PSWatchlistSingleUpdate_m_description_get(swigCPtr);
      PDescription ret = (cPtr == global::System.IntPtr.Zero) ? null : new PDescription(cPtr, false);
      return ret;
    } 
  }

  public enum EChangeType {
    E_NO_CHANGE,
    E_ADD,
    E_REMOVE
  }

}
