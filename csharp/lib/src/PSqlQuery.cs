//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PSqlQuery : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PSqlQuery(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PSqlQuery_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PSqlQuery obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PSqlQuery() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PSqlQuery(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PSqlQuery(PSqlDatabase db) : this(PapillonPINVOKE.new_PSqlQuery__SWIG_0(PSqlDatabase.getCPtr(db)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PSqlQuery(PSqlDatabase db, string query) : this(PapillonPINVOKE.new_PSqlQuery__SWIG_1(PSqlDatabase.getCPtr(db), query), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PSqlQuery(PSqlQuery other) : this(PapillonPINVOKE.new_PSqlQuery__SWIG_2(PSqlQuery.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsValid() {
    bool ret = PapillonPINVOKE.PSqlQuery_IsValid(swigCPtr);
    return ret;
  }

  public PResult Prepare(string query) {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Prepare(swigCPtr, query), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult BindValue(string placeholder, PObject value) {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_BindValue(swigCPtr, placeholder, PObject.getCPtr(value)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Exec() {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Exec__SWIG_0(swigCPtr), true);
    return ret;
  }

  public PResult Exec(string query) {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Exec__SWIG_1(swigCPtr, query), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Next() {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Next(swigCPtr), true);
    return ret;
  }

  public PResult Previous() {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Previous(swigCPtr), true);
    return ret;
  }

  public PResult First() {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_First(swigCPtr), true);
    return ret;
  }

  public PResult Last() {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Last(swigCPtr), true);
    return ret;
  }

  public int Size() {
    int ret = PapillonPINVOKE.PSqlQuery_Size(swigCPtr);
    return ret;
  }

  public PResult Get(int index, PObject value) {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Get__SWIG_0(swigCPtr, index, PObject.getCPtr(value)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Get(string name, PObject value) {
    PResult ret = new PResult(PapillonPINVOKE.PSqlQuery_Get__SWIG_1(swigCPtr, name, PObject.getCPtr(value)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
