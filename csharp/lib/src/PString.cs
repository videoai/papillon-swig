//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PString : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PString(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PString_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PString obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PString() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PString(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static string Empty() {
    string ret = PapillonPINVOKE.PString_Empty();
    return ret;
  }

  public PString() : this(PapillonPINVOKE.new_PString__SWIG_0(), true) {
  }

  public PString(string other) : this(PapillonPINVOKE.new_PString__SWIG_1(other), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PString(string str, int n) : this(PapillonPINVOKE.new_PString__SWIG_3(str, n), true) {
  }

  public PString(char c) : this(PapillonPINVOKE.new_PString__SWIG_7(c), true) {
  }

  public PString(short n) : this(PapillonPINVOKE.new_PString__SWIG_8(n), true) {
  }

  public PString(ushort n) : this(PapillonPINVOKE.new_PString__SWIG_9(n), true) {
  }

  public PString(int n) : this(PapillonPINVOKE.new_PString__SWIG_10(n), true) {
  }

  public PString(uint n) : this(PapillonPINVOKE.new_PString__SWIG_11(n), true) {
  }

  public PString(long n) : this(PapillonPINVOKE.new_PString__SWIG_12(n), true) {
  }

  public PString(ulong n) : this(PapillonPINVOKE.new_PString__SWIG_13(n), true) {
  }

  public PString(double n, char format, int precision) : this(PapillonPINVOKE.new_PString__SWIG_14(n, format, precision), true) {
  }

  public PString(double n, char format) : this(PapillonPINVOKE.new_PString__SWIG_15(n, format), true) {
  }

  public PString(double n) : this(PapillonPINVOKE.new_PString__SWIG_16(n), true) {
  }

  public static string DuplicateChars(int size, ushort c) {
    string ret = PapillonPINVOKE.PString_DuplicateChars(size, c);
    return ret;
  }

  public void Reserve(int size) {
    PapillonPINVOKE.PString_Reserve(swigCPtr, size);
  }

  public ushort At(int position) {
    ushort ret = PapillonPINVOKE.PString_At(swigCPtr, position);
    return ret;
  }

  public bool IsEmpty() {
    bool ret = PapillonPINVOKE.PString_IsEmpty(swigCPtr);
    return ret;
  }

  public bool NotEmpty() {
    bool ret = PapillonPINVOKE.PString_NotEmpty(swigCPtr);
    return ret;
  }

  public bool StartsWith(string s, PString.ECaseSensitivity c) {
    bool ret = PapillonPINVOKE.PString_StartsWith__SWIG_0(swigCPtr, s, (int)c);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool StartsWith(string s) {
    bool ret = PapillonPINVOKE.PString_StartsWith__SWIG_1(swigCPtr, s);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool EndsWith(string s, PString.ECaseSensitivity c) {
    bool ret = PapillonPINVOKE.PString_EndsWith__SWIG_0(swigCPtr, s, (int)c);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool EndsWith(string s) {
    bool ret = PapillonPINVOKE.PString_EndsWith__SWIG_1(swigCPtr, s);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Contains(string s, PString.ECaseSensitivity c) {
    bool ret = PapillonPINVOKE.PString_Contains__SWIG_0(swigCPtr, s, (int)c);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Contains(string s) {
    bool ret = PapillonPINVOKE.PString_Contains__SWIG_1(swigCPtr, s);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint Count(string s, PString.ECaseSensitivity c) {
    uint ret = PapillonPINVOKE.PString_Count__SWIG_0(swigCPtr, s, (int)c);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint Count(string s) {
    uint ret = PapillonPINVOKE.PString_Count__SWIG_1(swigCPtr, s);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int IndexOf(string s, PString.ECaseSensitivity c) {
    int ret = PapillonPINVOKE.PString_IndexOf__SWIG_0(swigCPtr, s, (int)c);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int IndexOf(string s) {
    int ret = PapillonPINVOKE.PString_IndexOf__SWIG_1(swigCPtr, s);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int LastIndexOf(string s, PString.ECaseSensitivity c) {
    int ret = PapillonPINVOKE.PString_LastIndexOf__SWIG_0(swigCPtr, s, (int)c);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int LastIndexOf(string s) {
    int ret = PapillonPINVOKE.PString_LastIndexOf__SWIG_1(swigCPtr, s);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Size() {
    int ret = PapillonPINVOKE.PString_Size(swigCPtr);
    return ret;
  }

  public string c_str() {
    string ret = PapillonPINVOKE.PString_c_str(swigCPtr);
    return ret;
  }

  public string c_wstr() {
    string ret = global::System.Runtime.InteropServices.Marshal.PtrToStringUni(PapillonPINVOKE.PString_c_wstr(swigCPtr));
    return ret;
  }

  public string ConstUTF8() {
    string ret = PapillonPINVOKE.PString_ConstUTF8(swigCPtr);
    return ret;
  }

  public PByteArray ToUTF8() {
    PByteArray ret = new PByteArray(PapillonPINVOKE.PString_ToUTF8(swigCPtr), true);
    return ret;
  }

  public string Substring(int position, int n) {
    string ret = PapillonPINVOKE.PString_Substring__SWIG_0(swigCPtr, position, n);
    return ret;
  }

  public string Substring(int position) {
    string ret = PapillonPINVOKE.PString_Substring__SWIG_1(swigCPtr, position);
    return ret;
  }

  public string Trim() {
    string ret = PapillonPINVOKE.PString_Trim(swigCPtr);
    return ret;
  }

  public PString Truncate(int position) {
    PString ret = new PString(PapillonPINVOKE.PString_Truncate(swigCPtr, position), false);
    return ret;
  }

  public PString Chop(int n) {
    PString ret = new PString(PapillonPINVOKE.PString_Chop(swigCPtr, n), false);
    return ret;
  }

  public string RemoveEndDigits() {
    string ret = PapillonPINVOKE.PString_RemoveEndDigits(swigCPtr);
    return ret;
  }

  public string PadRight(int size, ushort separator) {
    string ret = PapillonPINVOKE.PString_PadRight__SWIG_0(swigCPtr, size, separator);
    return ret;
  }

  public string PadRight(int size) {
    string ret = PapillonPINVOKE.PString_PadRight__SWIG_1(swigCPtr, size);
    return ret;
  }

  public string Quote() {
    string ret = PapillonPINVOKE.PString_Quote(swigCPtr);
    return ret;
  }

  public string Unquote() {
    string ret = PapillonPINVOKE.PString_Unquote(swigCPtr);
    return ret;
  }

  public string DoubleBackslash() {
    string ret = PapillonPINVOKE.PString_DoubleBackslash(swigCPtr);
    return ret;
  }

  public string AddLineNumbers(bool columns) {
    string ret = PapillonPINVOKE.PString_AddLineNumbers__SWIG_0(swigCPtr, columns);
    return ret;
  }

  public string AddLineNumbers() {
    string ret = PapillonPINVOKE.PString_AddLineNumbers__SWIG_1(swigCPtr);
    return ret;
  }

  public string ToUpper() {
    string ret = PapillonPINVOKE.PString_ToUpper(swigCPtr);
    return ret;
  }

  public string ToLower() {
    string ret = PapillonPINVOKE.PString_ToLower(swigCPtr);
    return ret;
  }

  public PStringList Split(ushort separator, PString.ESplitBehavior splitBehabior) {
    PStringList ret = new PStringList(PapillonPINVOKE.PString_Split__SWIG_0(swigCPtr, separator, (int)splitBehabior), true);
    return ret;
  }

  public PStringList Split(ushort separator) {
    PStringList ret = new PStringList(PapillonPINVOKE.PString_Split__SWIG_1(swigCPtr, separator), true);
    return ret;
  }

  public PStringList Split(string separator, PString.ESplitBehavior splitBehabior) {
    PStringList ret = new PStringList(PapillonPINVOKE.PString_Split__SWIG_2(swigCPtr, separator, (int)splitBehabior), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList Split(string separator) {
    PStringList ret = new PStringList(PapillonPINVOKE.PString_Split__SWIG_3(swigCPtr, separator), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList SplitSameLength(int size) {
    PStringList ret = new PStringList(PapillonPINVOKE.PString_SplitSameLength(swigCPtr, size), true);
    return ret;
  }

  public string Arg(string str, int fieldWidth, ushort fillChar) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_0(swigCPtr, str, fieldWidth, fillChar);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string Arg(string str, int fieldWidth) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_1(swigCPtr, str, fieldWidth);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string Arg(string str) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_2(swigCPtr, str);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string Arg(global::System.IntPtr value) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_3(swigCPtr, value);
    return ret;
  }

  public string Arg(int value, int fieldWidth, int arg2, ushort fillChar) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_5(swigCPtr, value, fieldWidth, arg2, fillChar);
    return ret;
  }

  public string Arg(int value, int fieldWidth, int arg2) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_6(swigCPtr, value, fieldWidth, arg2);
    return ret;
  }

  public string Arg(int value, int fieldWidth) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_7(swigCPtr, value, fieldWidth);
    return ret;
  }

  public string Arg(int value) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_8(swigCPtr, value);
    return ret;
  }

  public string Arg(long value, int fieldWidth, int arg2, ushort fillChar) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_9(swigCPtr, value, fieldWidth, arg2, fillChar);
    return ret;
  }

  public string Arg(long value, int fieldWidth, int arg2) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_10(swigCPtr, value, fieldWidth, arg2);
    return ret;
  }

  public string Arg(long value, int fieldWidth) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_11(swigCPtr, value, fieldWidth);
    return ret;
  }

  public string Arg(long value) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_12(swigCPtr, value);
    return ret;
  }

  public string Arg(uint value, int fieldWidth, int arg2, ushort fillChar) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_13(swigCPtr, value, fieldWidth, arg2, fillChar);
    return ret;
  }

  public string Arg(uint value, int fieldWidth, int arg2) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_14(swigCPtr, value, fieldWidth, arg2);
    return ret;
  }

  public string Arg(uint value, int fieldWidth) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_15(swigCPtr, value, fieldWidth);
    return ret;
  }

  public string Arg(uint value) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_16(swigCPtr, value);
    return ret;
  }

  public string Arg(ulong value, int fieldWidth, int arg2, ushort fillChar) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_17(swigCPtr, value, fieldWidth, arg2, fillChar);
    return ret;
  }

  public string Arg(ulong value, int fieldWidth, int arg2) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_18(swigCPtr, value, fieldWidth, arg2);
    return ret;
  }

  public string Arg(ulong value, int fieldWidth) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_19(swigCPtr, value, fieldWidth);
    return ret;
  }

  public string Arg(ulong value) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_20(swigCPtr, value);
    return ret;
  }

  public string Arg(double value, int fieldWidth, char format, int precision, ushort fillChar) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_21(swigCPtr, value, fieldWidth, format, precision, fillChar);
    return ret;
  }

  public string Arg(double value, int fieldWidth, char format, int precision) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_22(swigCPtr, value, fieldWidth, format, precision);
    return ret;
  }

  public string Arg(double value, int fieldWidth, char format) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_23(swigCPtr, value, fieldWidth, format);
    return ret;
  }

  public string Arg(double value, int fieldWidth) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_24(swigCPtr, value, fieldWidth);
    return ret;
  }

  public string Arg(double value) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_25(swigCPtr, value);
    return ret;
  }

  public string Arg(float value, int fieldWidth, char format, int precision, ushort fillChar) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_26(swigCPtr, value, fieldWidth, format, precision, fillChar);
    return ret;
  }

  public string Arg(float value, int fieldWidth, char format, int precision) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_27(swigCPtr, value, fieldWidth, format, precision);
    return ret;
  }

  public string Arg(float value, int fieldWidth, char format) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_28(swigCPtr, value, fieldWidth, format);
    return ret;
  }

  public string Arg(float value, int fieldWidth) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_29(swigCPtr, value, fieldWidth);
    return ret;
  }

  public string Arg(float value) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_30(swigCPtr, value);
    return ret;
  }

  public string Arg(PObject arg0) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_31(swigCPtr, PObject.getCPtr(arg0));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string Arg(PResult result) {
    string ret = PapillonPINVOKE.PString_Arg__SWIG_32(swigCPtr, PResult.getCPtr(result));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Compare(string other, PString.ECaseSensitivity caseSensitivity) {
    int ret = PapillonPINVOKE.PString_Compare__SWIG_0(swigCPtr, other, (int)caseSensitivity);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Compare(string other) {
    int ret = PapillonPINVOKE.PString_Compare__SWIG_1(swigCPtr, other);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ToBool(ref bool ok) {
    bool ret = PapillonPINVOKE.PString_ToBool__SWIG_0(swigCPtr, ref ok);
    return ret;
  }

  public bool ToBool() {
    bool ret = PapillonPINVOKE.PString_ToBool__SWIG_1(swigCPtr);
    return ret;
  }

  public int ToInt32(ref bool ok) {
    int ret = PapillonPINVOKE.PString_ToInt32__SWIG_0(swigCPtr, ref ok);
    return ret;
  }

  public int ToInt32() {
    int ret = PapillonPINVOKE.PString_ToInt32__SWIG_1(swigCPtr);
    return ret;
  }

  public uint ToUInt32(ref bool ok) {
    uint ret = PapillonPINVOKE.PString_ToUInt32__SWIG_0(swigCPtr, ref ok);
    return ret;
  }

  public uint ToUInt32() {
    uint ret = PapillonPINVOKE.PString_ToUInt32__SWIG_1(swigCPtr);
    return ret;
  }

  public long ToInt64(ref bool ok) {
    long ret = PapillonPINVOKE.PString_ToInt64__SWIG_0(swigCPtr, ref ok);
    return ret;
  }

  public long ToInt64() {
    long ret = PapillonPINVOKE.PString_ToInt64__SWIG_1(swigCPtr);
    return ret;
  }

  public ulong ToUInt64(ref bool ok) {
    ulong ret = PapillonPINVOKE.PString_ToUInt64__SWIG_0(swigCPtr, ref ok);
    return ret;
  }

  public ulong ToUInt64() {
    ulong ret = PapillonPINVOKE.PString_ToUInt64__SWIG_1(swigCPtr);
    return ret;
  }

  public float ToFloat(ref bool ok) {
    float ret = PapillonPINVOKE.PString_ToFloat__SWIG_0(swigCPtr, ref ok);
    return ret;
  }

  public float ToFloat() {
    float ret = PapillonPINVOKE.PString_ToFloat__SWIG_1(swigCPtr);
    return ret;
  }

  public double ToDouble(ref bool ok) {
    double ret = PapillonPINVOKE.PString_ToDouble__SWIG_0(swigCPtr, ref ok);
    return ret;
  }

  public double ToDouble() {
    double ret = PapillonPINVOKE.PString_ToDouble__SWIG_1(swigCPtr);
    return ret;
  }

  public PString Replace(string before, string after) {
    PString ret = new PString(PapillonPINVOKE.PString_Replace__SWIG_0(swigCPtr, before, after), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PString Replace(int pos, int n, string after) {
    PString ret = new PString(PapillonPINVOKE.PString_Replace__SWIG_1(swigCPtr, pos, n, after), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Save(string textFilename, PString.EWriteMode mode) {
    PResult ret = new PResult(PapillonPINVOKE.PString_Save__SWIG_0(swigCPtr, textFilename, (int)mode), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Save(string textFilename) {
    PResult ret = new PResult(PapillonPINVOKE.PString_Save__SWIG_1(swigCPtr, textFilename), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Load(string textFilename) {
    PResult ret = new PResult(PapillonPINVOKE.PString_Load(swigCPtr, textFilename), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum ECaseSensitivity {
    E_CASE_INSENSITIVE,
    E_CASE_SENSITIVE
  }

  public enum ESplitBehavior {
    E_KEEP_EMPTY_PARTS,
    E_SKIP_EMPTY_PARTS
  }

  public enum EWriteMode {
    E_FAIL_IF_EXIST,
    E_OVERWRITE,
    E_APPEND
  }

}
