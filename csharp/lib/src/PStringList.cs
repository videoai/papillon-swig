//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PStringList : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PStringList(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PStringList_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PStringList obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PStringList() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PStringList(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PStringList() : this(PapillonPINVOKE.new_PStringList__SWIG_0(), true) {
  }

  public PStringList(string s0, string s1, string s2, string s3, string s4, string s5, string s6, string s7, string s8, string s9) : this(PapillonPINVOKE.new_PStringList__SWIG_1(s0, s1, s2, s3, s4, s5, s6, s7, s8, s9), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1, string s2, string s3, string s4, string s5, string s6, string s7, string s8) : this(PapillonPINVOKE.new_PStringList__SWIG_2(s0, s1, s2, s3, s4, s5, s6, s7, s8), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1, string s2, string s3, string s4, string s5, string s6, string s7) : this(PapillonPINVOKE.new_PStringList__SWIG_3(s0, s1, s2, s3, s4, s5, s6, s7), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1, string s2, string s3, string s4, string s5, string s6) : this(PapillonPINVOKE.new_PStringList__SWIG_4(s0, s1, s2, s3, s4, s5, s6), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1, string s2, string s3, string s4, string s5) : this(PapillonPINVOKE.new_PStringList__SWIG_5(s0, s1, s2, s3, s4, s5), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1, string s2, string s3, string s4) : this(PapillonPINVOKE.new_PStringList__SWIG_6(s0, s1, s2, s3, s4), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1, string s2, string s3) : this(PapillonPINVOKE.new_PStringList__SWIG_7(s0, s1, s2, s3), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1, string s2) : this(PapillonPINVOKE.new_PStringList__SWIG_8(s0, s1, s2), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0, string s1) : this(PapillonPINVOKE.new_PStringList__SWIG_9(s0, s1), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(string s0) : this(PapillonPINVOKE.new_PStringList__SWIG_10(s0), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList(PStringList other) : this(PapillonPINVOKE.new_PStringList__SWIG_11(PStringList.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public PStringList Clone() {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_Clone(swigCPtr), true);
    return ret;
  }

  public void Clear() {
    PapillonPINVOKE.PStringList_Clear(swigCPtr);
  }

  public bool IsEmpty() {
    bool ret = PapillonPINVOKE.PStringList_IsEmpty(swigCPtr);
    return ret;
  }

  public int Size() {
    int ret = PapillonPINVOKE.PStringList_Size(swigCPtr);
    return ret;
  }

  public string Get(int index) {
    string ret = PapillonPINVOKE.PStringList_Get(swigCPtr, index);
    return ret;
  }

  public PResult Set(int index, string s) {
    PResult ret = new PResult(PapillonPINVOKE.PStringList_Set(swigCPtr, index, s), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList Add(string s) {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_Add(swigCPtr, s), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList AddAll(PStringList l) {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_AddAll(swigCPtr, PStringList.getCPtr(l)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList RemoveFirst() {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_RemoveFirst(swigCPtr), false);
    return ret;
  }

  public PStringList RemoveLast() {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_RemoveLast(swigCPtr), false);
    return ret;
  }

  public PStringList RemoveOne(string s) {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_RemoveOne(swigCPtr, s), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList RemoveAll(string s) {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_RemoveAll(swigCPtr, s), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList RemoveDuplicates() {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_RemoveDuplicates(swigCPtr), false);
    return ret;
  }

  public bool Contains(string s) {
    bool ret = PapillonPINVOKE.PStringList_Contains(swigCPtr, s);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string Join(string separator) {
    string ret = PapillonPINVOKE.PStringList_Join(swigCPtr, separator);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList Filter(string regexp) {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_Filter(swigCPtr, regexp), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList ToUpper() {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_ToUpper(swigCPtr), true);
    return ret;
  }

  public PStringList Sorted() {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_Sorted(swigCPtr), true);
    return ret;
  }

  public PStringList Shuffled() {
    PStringList ret = new PStringList(PapillonPINVOKE.PStringList_Shuffled(swigCPtr), true);
    return ret;
  }

  public static PResult FromTextFile(string textFilename, PStringList l) {
    PResult ret = new PResult(PapillonPINVOKE.PStringList_FromTextFile(textFilename, PStringList.getCPtr(l)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
