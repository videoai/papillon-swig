//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PStringMap : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PStringMap(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PStringMap_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PStringMap obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PStringMap() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PStringMap(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PStringMap() : this(PapillonPINVOKE.new_PStringMap__SWIG_0(), true) {
  }

  public PStringMap(PStringMap other) : this(PapillonPINVOKE.new_PStringMap__SWIG_1(PStringMap.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_papillon__PMapIteratorT_papillon__PString_papillon__PObject_t Iterator() {
    SWIGTYPE_p_papillon__PMapIteratorT_papillon__PString_papillon__PObject_t ret = new SWIGTYPE_p_papillon__PMapIteratorT_papillon__PString_papillon__PObject_t(PapillonPINVOKE.PStringMap_Iterator(swigCPtr), true);
    return ret;
  }

  public void Clear() {
    PapillonPINVOKE.PStringMap_Clear(swigCPtr);
  }

  public bool IsEmpty() {
    bool ret = PapillonPINVOKE.PStringMap_IsEmpty(swigCPtr);
    return ret;
  }

  public int Size() {
    int ret = PapillonPINVOKE.PStringMap_Size(swigCPtr);
    return ret;
  }

  public bool Has(string key) {
    bool ret = PapillonPINVOKE.PStringMap_Has(swigCPtr, key);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Get(string key, PObject value) {
    PResult ret = new PResult(PapillonPINVOKE.PStringMap_Get__SWIG_0(swigCPtr, key, PObject.getCPtr(value)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Get(string key, ref bool value) {
    PResult ret = new PResult(PapillonPINVOKE.PStringMap_Get__SWIG_1(swigCPtr, key, ref value), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Get(string key, ref int value) {
    PResult ret = new PResult(PapillonPINVOKE.PStringMap_Get__SWIG_2(swigCPtr, key, ref value), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Get(string key, ref long value) {
    PResult ret = new PResult(PapillonPINVOKE.PStringMap_Get__SWIG_3(swigCPtr, key, ref value), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Get(string key, ref float value) {
    PResult ret = new PResult(PapillonPINVOKE.PStringMap_Get__SWIG_4(swigCPtr, key, ref value), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PResult Get(string key, ref double value) {
    PResult ret = new PResult(PapillonPINVOKE.PStringMap_Get__SWIG_5(swigCPtr, key, ref value), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringMap Put(string key, PObject value) {
    PStringMap ret = new PStringMap(PapillonPINVOKE.PStringMap_Put(swigCPtr, key, PObject.getCPtr(value)), false);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PList GetKeyList() {
    PList ret = new PList(PapillonPINVOKE.PStringMap_GetKeyList(swigCPtr), true);
    return ret;
  }

  public PList GetValueList() {
    PList ret = new PList(PapillonPINVOKE.PStringMap_GetValueList(swigCPtr), true);
    return ret;
  }

  public PResult Remove(string key) {
    PResult ret = new PResult(PapillonPINVOKE.PStringMap_Remove(swigCPtr, key), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
