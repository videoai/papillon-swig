//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PTextFile : PObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PTextFile(global::System.IntPtr cPtr, bool cMemoryOwn) : base(PapillonPINVOKE.PTextFile_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PTextFile obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PTextFile() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PTextFile(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static PResult ReadAll(string filename, PTextFile textFile) {
    PResult ret = new PResult(PapillonPINVOKE.PTextFile_ReadAll(filename, PTextFile.getCPtr(textFile)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PTextFile() : this(PapillonPINVOKE.new_PTextFile__SWIG_0(), true) {
  }

  public PTextFile(PTextFile other) : this(PapillonPINVOKE.new_PTextFile__SWIG_1(PTextFile.getCPtr(other)), true) {
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetFileName() {
    string ret = PapillonPINVOKE.PTextFile_GetFileName(swigCPtr);
    return ret;
  }

  public int GetNumberOfLines() {
    int ret = PapillonPINVOKE.PTextFile_GetNumberOfLines(swigCPtr);
    return ret;
  }

  public string GetLine(int lineNumber) {
    string ret = PapillonPINVOKE.PTextFile_GetLine__SWIG_0(swigCPtr, lineNumber);
    return ret;
  }

  public PStringList GetLine(int lineNumber, string separator) {
    PStringList ret = new PStringList(PapillonPINVOKE.PTextFile_GetLine__SWIG_1(swigCPtr, lineNumber, separator), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PStringList GetLines() {
    PStringList ret = new PStringList(PapillonPINVOKE.PTextFile_GetLines(swigCPtr), false);
    return ret;
  }

}
