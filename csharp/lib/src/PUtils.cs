//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class PUtils : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PUtils(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PUtils obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PUtils() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PapillonPINVOKE.delete_PUtils(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static string GetEnv(string envVar) {
    string ret = PapillonPINVOKE.PUtils_GetEnv(envVar);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool IsEscPressed() {
    bool ret = PapillonPINVOKE.PUtils_IsEscPressed();
    return ret;
  }

  public static bool IsKeyPressed(int key) {
    bool ret = PapillonPINVOKE.PUtils_IsKeyPressed__SWIG_0(key);
    return ret;
  }

  public static bool IsKeyPressed() {
    bool ret = PapillonPINVOKE.PUtils_IsKeyPressed__SWIG_1();
    return ret;
  }

  public static void WaitForKeyPressed() {
    PapillonPINVOKE.PUtils_WaitForKeyPressed();
  }

  public static PResult GetCurrentProcessMemoryUsageMB(ref float currentMemoryUsageMB, ref float peakMemoryUsageMB, ref uint pageFaultCount) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_GetCurrentProcessMemoryUsageMB(ref currentMemoryUsageMB, ref peakMemoryUsageMB, ref pageFaultCount), true);
    return ret;
  }

  public static void PrintStackTrace(PLogStream os) {
    PapillonPINVOKE.PUtils_PrintStackTrace(PLogStream.getCPtr(os));
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList, PColour3i colour, bool drawId, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetectionList__SWIG_0(PImage.getCPtr(image), PDetectionList.getCPtr(detectionList), PColour3i.getCPtr(colour), drawId, boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList, PColour3i colour, bool drawId, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetectionList__SWIG_1(PImage.getCPtr(image), PDetectionList.getCPtr(detectionList), PColour3i.getCPtr(colour), drawId, boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList, PColour3i colour, bool drawId) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetectionList__SWIG_2(PImage.getCPtr(image), PDetectionList.getCPtr(detectionList), PColour3i.getCPtr(colour), drawId), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetectionList__SWIG_3(PImage.getCPtr(image), PDetectionList.getCPtr(detectionList), PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetectionList__SWIG_4(PImage.getCPtr(image), PDetectionList.getCPtr(detectionList)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PColour3i colour, bool drawId, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_0(PImage.getCPtr(image), PDetection.getCPtr(detection), PColour3i.getCPtr(colour), drawId, boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PColour3i colour, bool drawId, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_1(PImage.getCPtr(image), PDetection.getCPtr(detection), PColour3i.getCPtr(colour), drawId, boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PColour3i colour, bool drawId) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_2(PImage.getCPtr(image), PDetection.getCPtr(detection), PColour3i.getCPtr(colour), drawId), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_3(PImage.getCPtr(image), PDetection.getCPtr(detection), PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_4(PImage.getCPtr(image), PDetection.getCPtr(detection)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, string message, PColour3i colour, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_5(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(colour), boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, string message, PColour3i colour, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_6(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(colour), boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, string message, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_7(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawDetection(PImage image, PDetection detection, string message) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawDetection__SWIG_8(PImage.getCPtr(image), PDetection.getCPtr(detection), message), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message, PUtils.ELabelPosition position, double fontSize, int lineWidth, PColour3i rectangleColour, PColour3i labelColour, PColour3i fontColour, PImage.EFont font) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_0(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message, (int)position, fontSize, lineWidth, PColour3i.getCPtr(rectangleColour), PColour3i.getCPtr(labelColour), PColour3i.getCPtr(fontColour), (int)font), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message, PUtils.ELabelPosition position, double fontSize, int lineWidth, PColour3i rectangleColour, PColour3i labelColour, PColour3i fontColour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_1(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message, (int)position, fontSize, lineWidth, PColour3i.getCPtr(rectangleColour), PColour3i.getCPtr(labelColour), PColour3i.getCPtr(fontColour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message, PUtils.ELabelPosition position, double fontSize, int lineWidth, PColour3i rectangleColour, PColour3i labelColour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_2(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message, (int)position, fontSize, lineWidth, PColour3i.getCPtr(rectangleColour), PColour3i.getCPtr(labelColour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message, PUtils.ELabelPosition position, double fontSize, int lineWidth, PColour3i rectangleColour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_3(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message, (int)position, fontSize, lineWidth, PColour3i.getCPtr(rectangleColour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message, PUtils.ELabelPosition position, double fontSize, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_4(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message, (int)position, fontSize, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message, PUtils.ELabelPosition position, double fontSize) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_5(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message, (int)position, fontSize), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message, PUtils.ELabelPosition position) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_6(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message, (int)position), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawRectangle(PImage image, PRectanglei rectangle, string message) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawRectangle__SWIG_7(PImage.getCPtr(image), PRectanglei.getCPtr(rectangle), message), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PUtils.ELabelPosition position, PUtils.ELabelColourScheme colourScheme, double fontSize, int lineWidth, PColour3i boundingBoxColour, PImage.EFont font) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_0(PImage.getCPtr(image), PDetection.getCPtr(detection), message, (int)position, (int)colourScheme, fontSize, lineWidth, PColour3i.getCPtr(boundingBoxColour), (int)font), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PUtils.ELabelPosition position, PUtils.ELabelColourScheme colourScheme, double fontSize, int lineWidth, PColour3i boundingBoxColour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_1(PImage.getCPtr(image), PDetection.getCPtr(detection), message, (int)position, (int)colourScheme, fontSize, lineWidth, PColour3i.getCPtr(boundingBoxColour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PUtils.ELabelPosition position, PUtils.ELabelColourScheme colourScheme, double fontSize, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_2(PImage.getCPtr(image), PDetection.getCPtr(detection), message, (int)position, (int)colourScheme, fontSize, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PUtils.ELabelPosition position, PUtils.ELabelColourScheme colourScheme, double fontSize) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_3(PImage.getCPtr(image), PDetection.getCPtr(detection), message, (int)position, (int)colourScheme, fontSize), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PUtils.ELabelPosition position, PUtils.ELabelColourScheme colourScheme) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_4(PImage.getCPtr(image), PDetection.getCPtr(detection), message, (int)position, (int)colourScheme), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PUtils.ELabelPosition position) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_5(PImage.getCPtr(image), PDetection.getCPtr(detection), message, (int)position), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_6(PImage.getCPtr(image), PDetection.getCPtr(detection), message), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PColour3i backgroundColour, PColour3i fontColour, PUtils.ELabelPosition position, double fontSize, int lineWidth, PColour3i boundingBoxColour, PImage.EFont font) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_7(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(backgroundColour), PColour3i.getCPtr(fontColour), (int)position, fontSize, lineWidth, PColour3i.getCPtr(boundingBoxColour), (int)font), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PColour3i backgroundColour, PColour3i fontColour, PUtils.ELabelPosition position, double fontSize, int lineWidth, PColour3i boundingBoxColour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_8(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(backgroundColour), PColour3i.getCPtr(fontColour), (int)position, fontSize, lineWidth, PColour3i.getCPtr(boundingBoxColour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PColour3i backgroundColour, PColour3i fontColour, PUtils.ELabelPosition position, double fontSize, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_9(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(backgroundColour), PColour3i.getCPtr(fontColour), (int)position, fontSize, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PColour3i backgroundColour, PColour3i fontColour, PUtils.ELabelPosition position, double fontSize) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_10(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(backgroundColour), PColour3i.getCPtr(fontColour), (int)position, fontSize), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PColour3i backgroundColour, PColour3i fontColour, PUtils.ELabelPosition position) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_11(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(backgroundColour), PColour3i.getCPtr(fontColour), (int)position), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawLabel(PImage image, PDetection detection, string message, PColour3i backgroundColour, PColour3i fontColour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawLabel__SWIG_12(PImage.getCPtr(image), PDetection.getCPtr(detection), message, PColour3i.getCPtr(backgroundColour), PColour3i.getCPtr(fontColour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text, double fontSize, int thickness, PColour3i labelColour, PColour3i textColor, int border, PImage.EFont font, PImage.EPixelFormat pixelFormat) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_0(text, fontSize, thickness, PColour3i.getCPtr(labelColour), PColour3i.getCPtr(textColor), border, (int)font, (int)pixelFormat), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text, double fontSize, int thickness, PColour3i labelColour, PColour3i textColor, int border, PImage.EFont font) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_1(text, fontSize, thickness, PColour3i.getCPtr(labelColour), PColour3i.getCPtr(textColor), border, (int)font), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text, double fontSize, int thickness, PColour3i labelColour, PColour3i textColor, int border) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_2(text, fontSize, thickness, PColour3i.getCPtr(labelColour), PColour3i.getCPtr(textColor), border), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text, double fontSize, int thickness, PColour3i labelColour, PColour3i textColor) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_3(text, fontSize, thickness, PColour3i.getCPtr(labelColour), PColour3i.getCPtr(textColor)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text, double fontSize, int thickness, PColour3i labelColour) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_4(text, fontSize, thickness, PColour3i.getCPtr(labelColour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text, double fontSize, int thickness) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_5(text, fontSize, thickness), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text, double fontSize) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_6(text, fontSize), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PImage MakeLabel(string text) {
    PImage ret = new PImage(PapillonPINVOKE.PUtils_MakeLabel__SWIG_7(text), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, string windowTitle, float scaleFactor, PColour3i colour, bool drawId, bool boundingBoxOnly, int lineWidth, int waitTimeMs) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetectionList__SWIG_0(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, scaleFactor, PColour3i.getCPtr(colour), drawId, boundingBoxOnly, lineWidth, waitTimeMs), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, string windowTitle, float scaleFactor, PColour3i colour, bool drawId, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetectionList__SWIG_1(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, scaleFactor, PColour3i.getCPtr(colour), drawId, boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, string windowTitle, float scaleFactor, PColour3i colour, bool drawId, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetectionList__SWIG_2(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, scaleFactor, PColour3i.getCPtr(colour), drawId, boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, string windowTitle, float scaleFactor, PColour3i colour, bool drawId) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetectionList__SWIG_3(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, scaleFactor, PColour3i.getCPtr(colour), drawId), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, string windowTitle, float scaleFactor, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetectionList__SWIG_4(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, scaleFactor, PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, string windowTitle, float scaleFactor) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetectionList__SWIG_5(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, scaleFactor), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, string windowTitle) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetectionList__SWIG_6(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFirstFaceDetection(PFrame frame, PDetectionList detectionList, string windowTitle, PColour3i colour, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFirstFaceDetection__SWIG_0(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, PColour3i.getCPtr(colour), boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFirstFaceDetection(PFrame frame, PDetectionList detectionList, string windowTitle, PColour3i colour, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFirstFaceDetection__SWIG_1(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, PColour3i.getCPtr(colour), boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFirstFaceDetection(PFrame frame, PDetectionList detectionList, string windowTitle, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFirstFaceDetection__SWIG_2(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle, PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFirstFaceDetection(PFrame frame, PDetectionList detectionList, string windowTitle) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFirstFaceDetection__SWIG_3(PFrame.getCPtr(frame), PDetectionList.getCPtr(detectionList), windowTitle), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetection(PDetection detection, string windowTitle, float scaleFactor, PColour3i colour, bool drawId, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetection__SWIG_0(PDetection.getCPtr(detection), windowTitle, scaleFactor, PColour3i.getCPtr(colour), drawId, boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetection(PDetection detection, string windowTitle, float scaleFactor, PColour3i colour, bool drawId, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetection__SWIG_1(PDetection.getCPtr(detection), windowTitle, scaleFactor, PColour3i.getCPtr(colour), drawId, boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetection(PDetection detection, string windowTitle, float scaleFactor, PColour3i colour, bool drawId) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetection__SWIG_2(PDetection.getCPtr(detection), windowTitle, scaleFactor, PColour3i.getCPtr(colour), drawId), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetection(PDetection detection, string windowTitle, float scaleFactor, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetection__SWIG_3(PDetection.getCPtr(detection), windowTitle, scaleFactor, PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetection(PDetection detection, string windowTitle, float scaleFactor) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetection__SWIG_4(PDetection.getCPtr(detection), windowTitle, scaleFactor), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayDetection(PDetection detection, string windowTitle) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayDetection__SWIG_5(PDetection.getCPtr(detection), windowTitle), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, string windowTitle, float scaleFactor, PColour3i colour, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFeatureMap__SWIG_0(PFrame.getCPtr(frame), PFeatureMap.getCPtr(featureMap), windowTitle, scaleFactor, PColour3i.getCPtr(colour), boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, string windowTitle, float scaleFactor, PColour3i colour, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFeatureMap__SWIG_1(PFrame.getCPtr(frame), PFeatureMap.getCPtr(featureMap), windowTitle, scaleFactor, PColour3i.getCPtr(colour), boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, string windowTitle, float scaleFactor, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFeatureMap__SWIG_2(PFrame.getCPtr(frame), PFeatureMap.getCPtr(featureMap), windowTitle, scaleFactor, PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, string windowTitle, float scaleFactor) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFeatureMap__SWIG_3(PFrame.getCPtr(frame), PFeatureMap.getCPtr(featureMap), windowTitle, scaleFactor), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, string windowTitle) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DisplayFeatureMap__SWIG_4(PFrame.getCPtr(frame), PFeatureMap.getCPtr(featureMap), windowTitle), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawFeatureMap(PImage image, PFeatureMap featureMap, PColour3i colour, bool boundingBoxOnly, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawFeatureMap__SWIG_0(PImage.getCPtr(image), PFeatureMap.getCPtr(featureMap), PColour3i.getCPtr(colour), boundingBoxOnly, lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawFeatureMap(PImage image, PFeatureMap featureMap, PColour3i colour, bool boundingBoxOnly) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawFeatureMap__SWIG_1(PImage.getCPtr(image), PFeatureMap.getCPtr(featureMap), PColour3i.getCPtr(colour), boundingBoxOnly), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawFeatureMap(PImage image, PFeatureMap featureMap, PColour3i colour) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawFeatureMap__SWIG_2(PImage.getCPtr(image), PFeatureMap.getCPtr(featureMap), PColour3i.getCPtr(colour)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult DrawFeatureMap(PImage image, PFeatureMap featureMap) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_DrawFeatureMap__SWIG_3(PImage.getCPtr(image), PFeatureMap.getCPtr(featureMap)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult CropDetection(PDetection detection, PImage croppedImage, double scale) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_CropDetection__SWIG_0(PDetection.getCPtr(detection), PImage.getCPtr(croppedImage), scale), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult CropDetection(PDetection detection, PImage croppedImage) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_CropDetection__SWIG_1(PDetection.getCPtr(detection), PImage.getCPtr(croppedImage)), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult BlurDetection(PImage image, PDetection detection, PColour3i color, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_BlurDetection(PImage.getCPtr(image), PDetection.getCPtr(detection), PColour3i.getCPtr(color), lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PResult BlurDetectionList(PImage image, PDetectionList detectionList, PColour3i color, int lineWidth) {
    PResult ret = new PResult(PapillonPINVOKE.PUtils_BlurDetectionList(PImage.getCPtr(image), PDetectionList.getCPtr(detectionList), PColour3i.getCPtr(color), lineWidth), true);
    if (PapillonPINVOKE.SWIGPendingException.Pending) throw PapillonPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum ELabelPosition {
    E_CENTRE,
    E_TOP_CENTRE,
    E_BOTTOM_CENTRE
  }

  public enum ELabelColourScheme {
    E_BLACK,
    E_RED,
    E_GREEN,
    E_SILVER,
    E_BLUE,
    E_ORANGE,
    E_PINK
  }

}
